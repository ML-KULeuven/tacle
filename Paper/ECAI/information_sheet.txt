* What is the main claim of the paper? Why is this an important contribution to the machine learning/data mining literature?
It is possible to learn constraints in flat tabular spreadsheet data in an unsupervised way. We propose a general-purpose method and system, named TaCLe (from: Tabular Constraint Learner) for discovering constraints spanning entire rows and columns. This is important because millions of people across the world use spreadsheets every day yet errors are not uncommon. This could be overcome through the development of intelligent user-assisting tools, of which the problem we study here is at the core.

Our contributions are as follows:
\item we define the tabular constraint learning problem, where the goal is to find constraints that range over entire rows or columns in an unsupervised way;
\item we propose an effective 2-stage generate and test method where the first stage reasons only over properties of contiguous blocks of rows/columns, and the second stage continues to investigate individual rows and columns and their content;
\item furthermore, in the first stage we use a constraint solver to efficiently enumerate all combinations of maximally contiguous blocks compatible with the candidate constraint's argument; %, using backtracking search and forward checking;
\item experiments on different publicly available spreadsheets show that the system is able to extract constraints with high precision and recall. 

--
* What is the evidence provided to support claims? Be precise.
We have provided theoretical as well as experimental evidence. The main challenge is the number of possible constraints and combinations of rows and columns that need to be tried as input to the constraints. In Section 4 "Approach to Tabular Constraint Learning", we have presented theoretical analysis and a number of optimizations demonstrating how the algorithm reduces the search space and effectively navigates it using a two step procedure for candidate generation. In Section 5 "Evaluation", we have presented experimental evaluation of the TaCLe system on generated data demonstrating how different factors such as the length of vectors or the number of vectors affect the runtime, as well as evaluating it on a collection of Excel documents (with a link to a github repository with the data and screenshots of the system). The experiments demonstrate that the system has high precision and recall of learned constraint, while keeping runtime within reasonable bounds static and interactive use.
--
* Report 3-5 most closely related contributions in the past 7 years (authored by researchers outside the authorsâ€™ research group) and briefly state the relation of the submission to them.
1) Flashfill [8] (POPL, 2011) and Flashextract [13] (PLDI, 2014) by Sumit Gulwani et al. The former learns a string transformation function from a very few examples in an Excel spreadsheet, the latter learns a function extracting particular parts from a textual file such as xls, html or txt, given a set of marked examples. Both of them work in the supervised manner learning a string transformation function from a document with a set of examples. In our case, we work with unlabeled data in an unsupervised manner, we can have multiple tables with relationships between them with mixed textual and numeric data, contrary to both systems where columns are variables and rows are data points, in our work columns and row can be variables and data points.
2) Model-seeker [1]  (CP, 2012) by Nicolas Beldiceanu and Helmut Simonis. The Model seeker system is designed to find several types of numeric constraints that are common for constraint programming community such as scheduling or combinatorial optimization. We consider both numerical and textual constraint with a focus on spreadsheet formulas that are different from what typically studied in constraint programming literature.
3) Toward a logical/physical theory of spreadsheet modeling (TOIS, 1995) by Tomas Isakowitz et al. [11]. They have studied generalization of the formulas present in an Excel document and the development of a logical model of spreadsheets. The key difference is that they generalize existing formulas, while we learn them directly from the data.
--
* Have you published parts of your paper before, for instance in a conference? If so, give details of your previous paper(s) and a precise statement detailing how your paper provides a significant contribution beyond the previous paper(s).
No.
